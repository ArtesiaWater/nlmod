name: nlmod

on:
  # Trigger the workflow on push or pull request on main,
  # and only on pull-requests on dev branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install codecov
          pip install pytest-cov
          pip install pytest-dependency
          pip install codacy-coverage
          pip install -e .
          
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=80 --statistics
          
      - name: Install pymake, xmipy, and flopy
      shell: bash -l {0}
          run: |
            pip install https://github.com/modflowpy/pymake/zipball/master
            pip install xmipy
            pip install .
            
      - name: Setup symbolic link to gfortran on Linux
          if: runner.os == 'Linux'
          run: |
            sudo ln -fs /usr/bin/gfortran-10 /usr/local/bin/gfortran
            sudo ln -fs /usr/bin/gcc-10 /usr/local/bin/gcc
            sudo ln -fs /usr/bin/g++-10 /usr/local/bin/g++
            
      - name: Print GNU compiler versions
          run: |
            gfortran --version
            gcc --version
            g++ --version
            
      - name: Download executables needed for tests
          shell: bash -l {0}
          run: |
            cd autotest
            python get_exes.py
            cd ..
            
      - name: Add executables directory to path
          shell: bash
          run: |
            echo "$HOME/.local/bin" >> $GITHUB_PATH
            
      - name: Run pytest
        run: |
          pytest
          
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml
